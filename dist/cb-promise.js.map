{"version":3,"sources":["../src/cb-promise.js"],"names":["fs","require","util","promisify","readFile","then","JSON","parse","data","console","log","name","catch","err"],"mappings":";;AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEAC,KAAKC,SAAL,CAAeH,GAAGI,QAAlB,EAA4B,gBAA5B,EACGC,IADH,CACQC,KAAKC,KADb,EAEGF,IAFH,CAEQG,QAAQ;AACZC,UAAQC,GAAR,CAAYF,KAAKG,IAAjB,EAAuB,UAAvB;AACD,CAJH,EAKGC,KALH,CAKSC,OAAO;AACZJ,UAAQC,GAAR,CAAYG,GAAZ;AACD,CAPH","file":"cb-promise.js","sourcesContent":["const fs = require('fs')\n\n// fs.readFile('./package.json', (err, data) => {\n//   if (err) return console.log(err)\n\n//   data = JSON.parse(data)\n\n//   console.log(data.name)\n// })\n\n// function readFileAsync(path) {\n//   return new Promise((resolve, reject) => {\n//     fs.readFile(path, (err, data) => {\n//       if (err) reject(err)\n//         else resolve(data)\n//     })\n//   })\n// }\n\n// readFileAsync('./package.json')\n//   .then(data => {\n//     data = JSON.parse(data)\n//     console.log(data.name)\n//   })\n//   .catch(err => {\n//     console.log(err)\n//   })\n\n\nconst util = require('util')\n\nutil.promisify(fs.readFile)('./package.json')\n  .then(JSON.parse)\n  .then(data => {\n    console.log(data.name, 'dataname')\n  })\n  .catch(err => {\n    console.log(err)\n  })\n"]}