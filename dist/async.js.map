{"version":3,"sources":["../src/async.js"],"names":["fs","require","util","readAsync","promisify","readFile","init","data","JSON","parse","console","log","name"],"mappings":";;AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,YAAYD,KAAKE,SAAL,CAAeJ,GAAGK,QAAlB,CAAlB;;AAEA,eAAeC,IAAf,GAAsB;AACpB,MAAIC,OAAO,MAAMJ,UAAU,iBAAV,CAAjB;;AAEAI,SAAOC,KAAKC,KAAL,CAAWF,IAAX,CAAP;;AAEAG,UAAQC,GAAR,CAAYJ,KAAKK,IAAjB;AACD;AACDN","file":"async.js","sourcesContent":["const fs = require('fs')\n\n// 第一阶段回掉函数\n// function readFile(cb) {\n//   fs.readFile('../package.json', (err, data) => {\n//     if (err) return cb(err)\n\n//     cb && cb(null, data)\n//   })\n// }\n\n\n// readFile((err, data) => {\n//   if (!err) {\n//     data = JSON.parse(data)\n\n//     console.log(data.name)\n//   }\n// })\n\n\n\n//第二阶段 promise\n// function readFileAsync(path) {\n//   return new Promise((resolve, reject) => {\n//     fs.readFile(path, (err, data) => {\n//       if (err) reject(err)\n//         else resolve(data)\n//     })\n//   })\n// }\n\n// readFileAsync('../package.json')\n//   .then(data => {\n//     data = JSON.parse(data)\n\n//     console.log(data.name)\n//   })\n//   .catch(err => {\n//     console.log(err)\n//   })\n\n\n// 第三阶段 co+ generator function + promise\n\n// const co = require('co')\n// const util = require('util')\n\n// co(function *() {\n//   let data = yield util.promisify(fs.readFile)('../package.json')\n\n//   data = JSON.parse(data)\n\n//   console.log(data.name)\n// })\n\n\n// 第四阶段 async 统一\n\nconst util = require('util')\nconst readAsync = util.promisify(fs.readFile)\n\nasync function init() {\n  let data = await readAsync('../package.json')\n\n  data = JSON.parse(data)\n\n  console.log(data.name)\n}\ninit()\n"]}